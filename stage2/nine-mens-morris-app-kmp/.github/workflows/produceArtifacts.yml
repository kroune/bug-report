name: Builds app on all targets

on:
  workflow_dispatch:
  pull_request:
  push:


permissions:
  contents: read

jobs:
  basicTest:
    runs-on: ubuntu-latest
    env:
      KEYSTORE: ${{ secrets.KEYSTORE }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      repository_name: NineMensMorris
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run basic tests with Gradle
        run: ./gradlew test -x iosSimulatorArm64Test -x connectedAndroidTest -x desktopTest -x wasmJsTest
  uiTest:
    runs-on: macos-13
    env:
      KEYSTORE: ${{ secrets.KEYSTORE }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      repository_name: NineMensMorris
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run tests on ios
        run: ./gradlew iosSimulatorArm64Test -x test

      - name: Run tests on desktop
        run: ./gradlew desktopTest -x test

  #      - name: Run tests on web
  #        run: ./gradlew wasmJsBrowserTest -x test

  #      - name: Run tests on android
  #        run: ./gradlew connectedAndroidTest -x test

  produceArtifacts:
    needs: [ basicTest, uiTest ]
    strategy:
      matrix:
        include:
          # android
          - target: assembleRelease
            tag: Android
            directory: composeApp/build/outputs/apk/release/composeApp-release.apk
            os: ubuntu-latest
          # macos
          - target: packageReleaseDmg
            tag: Macos
            directory: composeApp/build/compose/binaries/main-release/dmg/
            os: macos-13
          # ios
          - target: iosSimulatorArm64Binaries
            tag: Ios
            directory: composeApp/build/libs/composeApp-desktop.jar
            os: macos-latest
          # web
          - target: wasmJsBrowserDistribution
            tag: Web
            directory: composeApp/build/dist/wasmJs/productionExecutable/
            os: ubuntu-latest
          # jar
          - target: packageReleaseUberJarForCurrentOS
            tag: Jar
            directory: composeApp/build/compose/jars/
            os: ubuntu-latest
          # linux
          - target: packageReleaseDeb
            tag: Linux
            directory: composeApp/build/compose/binaries/main-release/deb/
            os: ubuntu-latest
          # windows
          - target: packageReleaseExe
            tag: Windows
            directory: composeApp/build/compose/binaries/main-release/exe/
            os: windows-latest
    runs-on: ${{ matrix.os }}

    env:
      KEYSTORE: ${{ secrets.KEYSTORE }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      repository_name: NineMensMorris
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Produce artifacts
        run: ./gradlew ${{ matrix.target }} -x test -x iosSimulatorArm64Test -x connectedAndroidTest -x desktopTest -x wasmJsTest

      - name: Upload artifacts to github
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }}-${{ matrix.tag }}-artifact
          path: ${{ matrix.directory }}

  uploadArtifactsToMicroservice:
    needs: [ produceArtifacts ]
    runs-on: ubuntu-latest
    env:
      KEYSTORE: ${{ secrets.KEYSTORE }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      repository_name: NineMensMorris
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Upload artifacts to artifacts microservice
        run: |
          ls -hlas
          for FILE in *; do
            PLATFORM_NAME=$(echo $FILE | cut -d "-" -f 2)
            curl -v --connect-timeout 30 -m 300 -X POST -T $FILE https://nine-men-s-morris.me/artifacts-service/upload?auth_token=${{ secrets.AUTH_TOKEN }}\&type=Testing\&platform=PLATFORM_NAME\&commit=${{ github.event.head_commit.id }}\&branch=${{ github.ref_name }}
          done
